void move_curb_to_curb(int car, int curbsrc, int curbdest)
{
	klee_assume(car_clear[car] == 1);
	klee_assume(curb_clear[curbdest] == 1);
	klee_assume(at_curb_num[car][curbsrc] == 1);

	curb_clear[curbdest] = 0;
	curb_clear[curbsrc] = 1;
	at_curb_num[car][curbdest] = 1;
	at_curb_num[car][curbsrc] = 0;
}

void move_curb_to_car(int car, int curbsrc, int cardest)
{
	klee_assume(car_clear[car] == 1);
	klee_assume(car_clear[cardest] == 1);
	klee_assume(at_curb_num[car][curbsrc] == 1);
	klee_assume(at_curb[cardest] == 1);

	car_clear[cardest] = 0;
	curb_clear[curbsrc] = 1;
	behind_car[car][cardest] = 1;
	at_curb_num[car][curbsrc] = 0;
	at_curb[car] = 0;
}

void move_car_to_curb(int car, int carsrc, int curbdest)
{
	klee_assume(car_clear[car] == 1);
	klee_assume(curb_clear[curbdest] == 1);
	klee_assume(behind_car[car][carsrc] == 1);

	curb_clear[curbdest] = 0;
	car_clear[carsrc] = 1;
	at_curb_num[car][curbdest] = 1;
	behind_car[car][carsrc] = 0;
	at_curb[car] = 1;
}


void move_car_to_car(int car, int carsrc, int cardest)
{
	klee_assume(car_clear[car] == 1);
	klee_assume(car_clear[cardest] == 1);
	klee_assume(behind_car[car][carsrc] == 1);
	klee_assume(at_curb[cardest] == 1);

	car_clear[cardest] = 0;
	car_clear[carsrc] = 1;
	behind_car[car][cardest] = 1;
	behind_car[car][carsrc] = 0;
}
